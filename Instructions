REACT: 
CRYPTO PRICE TRACKER WITH REDUX OBJECTIVE: 

Rebuild the Crypto Price Tracker using Redux for state management instead of useState, and implement real-time price updates on 10 crypto currencies each. This will help you understand global state management and how to structure Redux logic in a React application. 

Instructions: 

Set up Redux State Management 
A. Inside your src folder, create a new folder named store to handle the Redux logic. Inside the store folder, create two files: 
 1. store.js → This will hold the global state that will be accessible in any component. 
 2. trackerSlice.js → This will contain the createSlice() function to manage state logic. 
  - Implement Redux Slice (trackerSlice.js):
   Use createSlice() to define: 
     name → A unique name for the slice. 
     initialState → The default values for tracking crypto prices. 
     4 reducer functions to handle their respective states. 
  Integrate Redux Store (store.js) 
   B. Import configureStore() from Redux Toolkit: 
     Set up the store and integrate trackerSlice. 
Provide the store to your application using Provider from React Redux. 
C. Build the Tracker.jsx Component Inside the components folder, create a file named Tracker.jsx. Implement the following functions: useEffect → Ensures data is fetched when the component re-renders. fetchPrices → Does a manual refresh and fetches the latest crypto prices when clicking the refresh button. stopUpdates → Stops price updates when clicking the stop button. Style the tracker using CSS for a clean UI. 